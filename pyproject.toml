[project]
name = "commune-ipfs"
version = "0.1.0"
description = "IPFS-based distributed file storage system with FastAPI backend and web interface"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "ipfshttpclient>=0.8.0a2",
    "sqlalchemy>=2.0.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "jinja2>=3.1.0",
    "aiofiles>=23.0.0",
    "pydantic-settings>=2.8.1",
    "psutil>=7.0.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "httpx>=0.28.1",
    "pytest-timeout>=2.4.0",
    "substrate-interface>=1.7.11",
    "aiohttp>=3.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "httpx>=0.25.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '(app/.*\.py|tests/.*\.py|[^/]+\.py)$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | test_new
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
src_paths = ["app", "tests", "."]
skip_glob = [
    "test_new/*",
    ".venv/*",
    "venv/*",
    "build/*",
    "dist/*",
    "*.egg-info/*",
    "**/site-packages/*",
    "**/.venv/*",
    "**/venv/*"
]
skip_gitignore = true

[tool.ruff]
line-length = 88
target-version = "py310"
include = ["app/**/*.py", "tests/**/*.py", "*.py"]
exclude = [
    "test_new",
    ".venv",
    "venv",
    "build",
    "dist",
    "*.egg-info",
    ".git",
    "__pycache__",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "I",  # isort
    "C",  # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long
    "B008",  # function call in argument defaults (FastAPI dependency injection)
    "C901",  # function too complex
]

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0613",  # unused-argument
    "C0103",  # invalid-name
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "db", "app"]

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true
ignore_missing_imports = true
show_error_codes = true
exclude = [
    "test_new",
    "tests/*",
    "test_*.py",
    "test_hooks_simple.py",
    "quick_test.py",
    ".venv",
    "venv",
    "build",
    "dist",
    ".git",
    "__pycache__",
    "version_manager.py",
    "integration_client.py"
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "isort>=6.0.1",
    "mypy>=1.17.1",
    "pre-commit>=4.2.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.9",
]
